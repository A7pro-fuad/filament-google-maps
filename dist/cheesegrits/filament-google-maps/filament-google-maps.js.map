{"version":3,"file":"/cheesegrits/filament-google-maps/filament-google-maps.js","mappings":"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","sources":["webpack://filament-google-maps/webpack/runtime/chunk loaded","webpack://filament-google-maps/./resources/js/filament-google-maps.js","webpack://filament-google-maps/webpack/bootstrap","webpack://filament-google-maps/webpack/runtime/hasOwnProperty shorthand","webpack://filament-google-maps/webpack/runtime/jsonp chunk loading","webpack://filament-google-maps/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","window.filamentGoogleMaps = ($wire, config) => {\n    return {\n        map: null,\n        geocoder: null,\n        marker: null,\n        markerLocation: null,\n        layers: null,\n        mapEl: null,\n        pacEl: null,\n        config: {\n            debug: false,\n            autocomplete: '',\n            autocompleteReverse: false,\n            geolocate: true,\n            geolocateLabel: 'Set Current Location',\n            draggable: true,\n            clickable: false,\n            defaultLocation: {\n                lat: 0,\n                lng: 0\n            },\n            statePath: '',\n            controls: {\n                mapTypeControl: true,\n                scaleControl: true,\n                streetViewControl: true,\n                rotateControl: true,\n                fullscreenControl: true,\n                searchBoxControl: false,\n                zoomControl: false,\n            },\n            layers: [],\n            reverseGeocodeFields: {},\n            defaultZoom: 8,\n            gmaps: '',\n        },\n        symbols: {\n            '%n': [\"street_number\"],\n            '%z': [\"postal_code\"],\n            '%S': [\"street_address\", \"route\"],\n            '%A1': [\"administrative_area_level_1\"],\n            '%A2': [\"administrative_area_level_2\"],\n            '%A3': [\"administrative_area_level_3\"],\n            '%A4': [\"administrative_area_level_4\"],\n            '%A5': [\"administrative_area_level_5\"],\n            '%a1': [\"administrative_area_level_1\"],\n            '%a2': [\"administrative_area_level_2\"],\n            '%a3': [\"administrative_area_level_3\"],\n            '%a4': [\"administrative_area_level_4\"],\n            '%a5': [\"administrative_area_level_5\"],\n            '%L': [\"locality\"],\n            '%D': [\"sublocality\"],\n            '%C': [\"country\"],\n            '%c': [\"country\"],\n        },\n\n        loadGMaps: function () {\n            if (!document.getElementById('filament-google-maps-google-maps-js')) {\n                const script = document.createElement('script');\n                script.id = 'filament-google-maps-google-maps-js';\n                window.filamentGoogleMapsAsyncLoad = this.createMap.bind(this);\n                script.src = this.config.gmaps + '&callback=filamentGoogleMapsAsyncLoad';\n                document.head.appendChild(script);\n            } else {\n                const waitForGlobal = function (key, callback) {\n                    if (window[key]) {\n                        callback();\n                    } else {\n                        setTimeout(function () {\n                            waitForGlobal(key, callback);\n                        }, 100);\n                    }\n                };\n\n                waitForGlobal(\"filamentGoogleMapsAPILoaded\", function () {\n                    this.createMap();\n                }.bind(this));\n            }\n        },\n\n        init: function (mapEl, pacEl) {\n            this.mapEl = mapEl;\n            this.pacEl = pacEl;\n            this.config = {...this.config, ...config};\n            this.loadGMaps();\n        },\n\n        createMap: function () {\n            window.filamentGoogleMapsAPILoaded = true;\n\n            if (this.config.autocompleteReverse || Object.keys(this.config.reverseGeocodeFields).length > 0) {\n                this.geocoder = new google.maps.Geocoder();\n            }\n\n            this.map = new google.maps.Map(this.mapEl, {\n                center: this.getCoordinates(),\n                zoom: this.config.defaultZoom,\n                ...this.config.controls\n            });\n\n\n            this.marker = new google.maps.Marker({\n                draggable: this.config.draggable,\n                map: this.map\n            });\n\n            this.marker.setPosition(this.getCoordinates());\n\n            if (this.config.clickable) {\n                this.map.addListener('click', (event) => {\n                    this.markerLocation = event.latLng.toJSON();\n                    this.setCoordinates(this.markerLocation);\n                    this.updateAutocomplete(this.markerLocation);\n                    this.updateGeocode(this.markerLocation);\n                    //this.updateMap(this.markerLocation);\n                    this.map.panTo(this.markerLocation);\n                });\n            }\n\n            if (this.config.draggable) {\n                google.maps.event.addListener(this.marker, 'dragend', (event) => {\n                    this.markerLocation = event.latLng.toJSON();\n                    this.setCoordinates(this.markerLocation);\n                    this.updateAutocomplete(this.markerLocation);\n                    this.updateGeocode(this.markerLocation);\n                    // this.updateMap(this.markerLocation);\n                    this.map.panTo(this.markerLocation);\n                });\n            }\n\n            if (this.config.controls.searchBoxControl) {\n                const input = this.pacEl;\n                const searchBox = new google.maps.places.SearchBox(input);\n                this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n                searchBox.addListener(\"places_changed\", () => {\n                    input.value = ''\n                    this.markerLocation = searchBox.getPlaces()[0].geometry.location\n                })\n            }\n\n            const geocompleteOptions = {\n                fields: [\"formatted_address\", \"geometry\", \"name\"],\n                strictBounds: false,\n                types: [\"geocode\"],\n            };\n\n\n            if (this.config.autocomplete) {\n                const geoComplete = document.getElementById(this.config.autocomplete);\n\n                if (geoComplete) {\n                    window.addEventListener('keydown', function (e) {\n                        if (e.key === 'U+000A' || e.key === 'Enter' || e.code === 'Enter') {\n                            if (e.target.nodeName === 'INPUT' && e.target.type === 'text') {\n                                e.preventDefault();\n                                return false;\n                            }\n                        }\n                    }, true);\n\n                    const autocomplete = new google.maps.places.Autocomplete(geoComplete, geocompleteOptions);\n\n                    autocomplete.addListener(\"place_changed\", () => {\n                        const place = autocomplete.getPlace();\n\n                        if (!place.geometry || !place.geometry.location) {\n                            window.alert(\"No details available for input: '\" + place.name + \"'\");\n                            return;\n                        }\n\n                        if (place.geometry.viewport) {\n                            this.map.fitBounds(place.geometry.viewport);\n                        } else {\n                            this.map.setCenter(place.geometry.location);\n                        }\n\n                        this.marker.setPosition(place.geometry.location);\n                        this.markerLocation = place.geometry.location;\n                        this.setCoordinates(place.geometry.location);\n                        this.updateGeocode(this.markerLocation);\n                    });\n                }\n            }\n\n            if (this.config.layers) {\n                this.layers = this.config.layers.map((layerUrl) => {\n                    return new google.maps.KmlLayer({\n                        url: layerUrl,\n                        map: this.map,\n                    });\n                })\n            }\n\n            if (this.config.geolocate && \"geolocation\" in navigator) {\n                const locationButton = document.createElement(\"button\");\n\n                locationButton.textContent = this.config.geolocateLabel;\n                locationButton.classList.add(\"custom-map-control-button\");\n                this.map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);\n\n                locationButton.addEventListener(\"click\", () => {\n                    navigator.geolocation.getCurrentPosition((position) => {\n                        this.markerLocation = {\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        };\n                        this.setCoordinates(this.markerLocation);\n                        this.updateAutocomplete(this.markerLocation);\n                        this.updateGeocode(this.markerLocation);\n                        this.map.panTo(this.markerLocation);\n                    });\n                });\n            }\n        },\n        updateMapFromAlpine: function () {\n            const location = this.getCoordinates();\n            const markerLocation = this.marker.getPosition();\n\n            if (!(location.lat === markerLocation.lat() && location.lng === markerLocation.lng())) {\n                this.updateAutocomplete(location)\n                this.updateMap(location);\n            }\n        },\n        updateMap: function (position) {\n            this.marker.setPosition(position);\n            this.map.panTo(position);\n        },\n        updateGeocode: function (position) {\n            if (Object.keys(this.config.reverseGeocodeFields).length > 0) {\n                this.geocoder\n                    .geocode({location: position})\n                    .then((response) => {\n                        if (response.results[0]) {\n                            //$wire.set(config.autocomplete, response.results[0].formatted_address);\n                            const replacements = this.getReplacements(response.results[0].address_components);\n\n                            for (const field in this.config.reverseGeocodeFields) {\n                                let replaced = this.config.reverseGeocodeFields[field];\n\n                                for (const replacement in replacements) {\n                                    replaced = replaced.split(replacement).join(replacements[replacement]);\n                                }\n\n                                for (const symbol in this.symbols) {\n                                    replaced = replaced.split(symbol).join('');\n                                }\n\n                                replaced = replaced.trim();\n                                $wire.set(field, replaced)\n                            }\n\n                        }\n                    })\n                    .catch((error) => {\n                        console.log(error.message);\n                    })\n            }\n        },\n        updateAutocomplete: function (position) {\n            if (this.config.autocomplete && this.config.autocompleteReverse) {\n                this.geocoder\n                    .geocode({location: position})\n                    .then((response) => {\n                        if (response.results[0]) {\n                            $wire.set(this.config.autocomplete, response.results[0].formatted_address);\n                        }\n                    })\n                    .catch((error) => {\n                        console.log(error.message);\n                    })\n            }\n        },\n        setCoordinates: function (position) {\n            $wire.set(this.config.statePath, position);\n        },\n        getCoordinates: function () {\n            let location = $wire.get(this.config.statePath)\n            if (location === null || !location.hasOwnProperty('lat')) {\n                location = {lat: this.config.defaultLocation.lat, lng: this.config.defaultLocation.lng}\n            }\n            return location;\n        },\n\n        getReplacements: function (address_components) {\n            let replacements = {};\n\n            address_components.forEach(component => {\n                for (const symbol in this.symbols) {\n                    if (this.symbols[symbol].indexOf(component.types[0]) !== -1) {\n                        if (symbol === symbol.toLowerCase()) {\n                            replacements[symbol] = component.short_name;\n                        } else {\n                            replacements[symbol] = component.long_name;\n                        }\n                    }\n                }\n            });\n\n            if (this.config.debug) {\n                console.log(replacements);\n            }\n\n            return replacements;\n        }\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t471: 0,\n\t822: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfilament_google_maps\"] = self[\"webpackChunkfilament_google_maps\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [822], () => (__webpack_require__(825)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [822], () => (__webpack_require__(3)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","filamentGoogleMaps","$wire","config","map","geocoder","marker","markerLocation","layers","mapEl","pacEl","debug","autocomplete","autocompleteReverse","geolocate","geolocateLabel","draggable","clickable","defaultLocation","lat","lng","statePath","controls","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","searchBoxControl","zoomControl","reverseGeocodeFields","defaultZoom","gmaps","symbols","loadGMaps","document","getElementById","waitForGlobal","key","callback","setTimeout","this","createMap","bind","script","createElement","id","filamentGoogleMapsAsyncLoad","src","head","appendChild","init","filamentGoogleMapsAPILoaded","Object","keys","length","google","maps","Geocoder","Map","center","getCoordinates","zoom","Marker","setPosition","addListener","event","latLng","toJSON","setCoordinates","updateAutocomplete","updateGeocode","panTo","input","searchBox","places","SearchBox","ControlPosition","TOP_LEFT","push","value","getPlaces","geometry","location","geoComplete","addEventListener","e","code","target","nodeName","type","preventDefault","Autocomplete","fields","strictBounds","types","place","getPlace","viewport","fitBounds","setCenter","alert","name","layerUrl","KmlLayer","url","navigator","locationButton","textContent","classList","add","TOP_CENTER","geolocation","getCurrentPosition","position","coords","latitude","longitude","updateMapFromAlpine","getPosition","updateMap","geocode","then","response","results","replacements","getReplacements","address_components","field","replaced","replacement","split","join","symbol","trim","set","error","console","log","message","formatted_address","get","hasOwnProperty","forEach","component","indexOf","toLowerCase","short_name","long_name","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","o","obj","prop","prototype","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}