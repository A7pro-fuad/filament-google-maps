{"version":3,"file":"/cheesegrits/filament-google-maps/filament-google-maps.js","mappings":"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","sources":["webpack://filament-google-maps/webpack/runtime/chunk loaded","webpack://filament-google-maps/./resources/js/filament-google-maps.js","webpack://filament-google-maps/webpack/bootstrap","webpack://filament-google-maps/webpack/runtime/hasOwnProperty shorthand","webpack://filament-google-maps/webpack/runtime/jsonp chunk loading","webpack://filament-google-maps/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","window.filamentGoogleMaps = ($wire, config) => {\n    return {\n        map: null,\n        geocoder: null,\n        marker: null,\n        markerLocation: null,\n        mapEl: null,\n        pacEl: null,\n\n        loadGMaps: function () {\n            if (!document.getElementById('filament-google-maps-google-maps-js')) {\n                const script = document.createElement('script');\n                script.id = 'filament-google-maps-google-maps-js';\n                window.filamentGoogleMapsAsyncLoad = this.createMap.bind(this);\n                script.src = config.gmaps + '&callback=filamentGoogleMapsAsyncLoad';\n                document.head.appendChild(script);\n            } else {\n                const waitForGlobal = function (key, callback) {\n                    if (window[key]) {\n                        callback();\n                    } else {\n                        setTimeout(function () {\n                            waitForGlobal(key, callback);\n                        }, 100);\n                    }\n                };\n\n                waitForGlobal(\"filamentGoogleMapsAPILoaded\", function () {\n                    this.createMap();\n                }.bind(this));\n            }\n        },\n\n        init: function (mapEl, pacEl) {\n            this.mapEl = mapEl;\n            this.pacEl = pacEl;\n            this.loadGMaps();\n        },\n\n        createMap: function () {\n            window.filamentGoogleMapsAPILoaded = true;\n\n            let position = this.getCoordinates();\n\n            this.map = new google.maps.Map(this.mapEl, {\n                center: this.getCoordinates(),\n                zoom: config.defaultZoom,\n                ...config.controls\n            });\n\n\n            this.marker = new google.maps.Marker({\n                draggable: config.draggable,\n                map: this.map\n            });\n\n            this.marker.setPosition(this.getCoordinates());\n\n            if (config.clickable) {\n                this.map.addListener('click', (event) => {\n                    this.markerLocation = event.latLng.toJSON();\n                    this.setCoordinates(this.markerLocation);\n                    this.updateAutocomplete(this.markerLocation);\n                    //this.updateMap(this.markerLocation);\n                    this.map.panTo(this.markerLocation);\n                });\n            }\n\n            if (config.draggable) {\n                google.maps.event.addListener(this.marker, 'dragend', (event) => {\n                    this.markerLocation = event.latLng.toJSON();\n                    this.setCoordinates(this.markerLocation);\n                    this.updateAutocomplete(this.markerLocation);\n                    // this.updateMap(this.markerLocation);\n                    this.map.panTo(this.markerLocation);\n                });\n            }\n\n            if (config.controls.searchBoxControl) {\n                const input = this.pacEl;\n                const searchBox = new google.maps.places.SearchBox(input);\n                this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n                searchBox.addListener(\"places_changed\", () => {\n                    input.value = ''\n                    this.markerLocation = searchBox.getPlaces()[0].geometry.location\n                })\n            }\n\n            const geocompleteOptions = {\n                fields: [\"formatted_address\", \"geometry\", \"name\"],\n                strictBounds: false,\n                types: [\"geocode\"],\n            };\n\n\n            if (config.autocomplete) {\n                if (config.autocompleteReverse) {\n                    this.geocoder = new google.maps.Geocoder();\n                }\n\n                const geoComplete = document.getElementById(config.autocomplete);\n\n                if (geoComplete) {\n                    window.addEventListener('keydown', function (e) {\n                        if (e.keyIdentifier === 'U+000A' || e.keyIdentifier === 'Enter' || e.keyCode === 13) {\n                            if (e.target.nodeName == 'INPUT' && e.target.type == 'text') {\n                                e.preventDefault();\n                                return false;\n                            }\n                        }\n                    }, true);\n\n                    const autocomplete = new google.maps.places.Autocomplete(geoComplete, geocompleteOptions);\n\n                    autocomplete.addListener(\"place_changed\", (ev) => {\n                        const place = autocomplete.getPlace();\n\n                        if (!place.geometry || !place.geometry.location) {\n                            // User entered the name of a Place that was not suggested and\n                            // pressed the Enter key, or the Place Details request failed.\n                            window.alert(\"No details available for input: '\" + place.name + \"'\");\n                            return;\n                        }\n\n                        // If the place has a geometry, then present it on a map.\n                        if (place.geometry.viewport) {\n                            this.map.fitBounds(place.geometry.viewport);\n                        } else {\n                            this.map.setCenter(place.geometry.location);\n                        }\n\n                        this.marker.setPosition(place.geometry.location);\n                        this.markerLocation = place.geometry.location;\n                        this.setCoordinates(place.geometry.location);\n                    });\n                }\n            }\n\n\n        },\n        updateMapFromAlpine: function () {\n            const location = this.getCoordinates();\n            const markerLocation = this.marker.getPosition();\n\n            if (!(location.lat === markerLocation.lat() && location.lng === markerLocation.lng())) {\n                this.updateAutocomplete(location)\n                this.updateMap(location);\n            }\n        },\n        updateMap: function (position) {\n            this.marker.setPosition(position);\n            this.map.panTo(position);\n        },\n        updateAutocomplete: function (position) {\n            if (config.autocomplete && config.autocompleteReverse) {\n                this.geocoder\n                    .geocode({location: position})\n                    .then((response) => {\n                        if (response.results[0]) {\n                            $wire.set(config.autocomplete, response.results[0].formatted_address);\n                        }\n                    })\n            }\n        },\n        setCoordinates: function (position) {\n            $wire.set(config.statePath, position, false);\n        },\n        getCoordinates: function () {\n            let location = $wire.get(config.statePath)\n            if (location === null || !location.hasOwnProperty('lat')) {\n                location = {lat: config.defaultLocation.lat, lng: config.defaultLocation.lng}\n            }\n            return location;\n        },\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t471: 0,\n\t822: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfilament_google_maps\"] = self[\"webpackChunkfilament_google_maps\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [822], () => (__webpack_require__(825)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [822], () => (__webpack_require__(3)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","filamentGoogleMaps","$wire","config","map","geocoder","marker","markerLocation","mapEl","pacEl","loadGMaps","document","getElementById","waitForGlobal","key","callback","setTimeout","this","createMap","bind","script","createElement","id","filamentGoogleMapsAsyncLoad","src","gmaps","head","appendChild","init","filamentGoogleMapsAPILoaded","getCoordinates","google","maps","Map","center","zoom","defaultZoom","controls","Marker","draggable","setPosition","clickable","addListener","event","latLng","toJSON","setCoordinates","updateAutocomplete","panTo","searchBoxControl","input","searchBox","places","SearchBox","ControlPosition","TOP_LEFT","push","value","getPlaces","geometry","location","autocomplete","autocompleteReverse","Geocoder","geoComplete","addEventListener","e","keyIdentifier","keyCode","target","nodeName","type","preventDefault","Autocomplete","fields","strictBounds","types","ev","place","getPlace","viewport","fitBounds","setCenter","alert","name","updateMapFromAlpine","getPosition","lat","lng","updateMap","position","geocode","then","response","results","set","formatted_address","statePath","get","hasOwnProperty","defaultLocation","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","splice","r","o","obj","prop","prototype","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","__webpack_exports__"],"sourceRoot":""}